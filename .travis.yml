sudo: required

language: go
go:
- 1.6.3

env:
  global:
      - DEPLOY_HOST=rpm.palette-software.com
      - DEPLOY_PATH=/var/palette-rpm-repo
      - DEPLOY_USER=palette-rpm
      - RPM_VERSION=2.1.$TRAVIS_BUILD_NUMBER
      - PRODUCT_VERSION=v$RPM_VERSION

      # travis encrypt DEPLOY_PASS=...
      - secure: "HlojO/dtANjFDpkikiY6LJjSb1X34QRVXrhCcwgxg1R5ZF77+m/ntuT5r9lHlQcNjYezxZND7SYMONIjiCFaO6PtkeJOEdKXFTTFbMB/MvGCGKTzjIGsy2gAN2NtvwLLKH2PaQwdaE5HwC7+8V6uHqwhGmPqCrzeaN3Bc6InIqFcKo2TuNb0rM2+AOKTeO6ZmyWAegcYcTbIN6iELcrx7BMkUzfbATBS+iIPRFXaXJ7DcNoHleReS74d2b2R32k72kBqiGNBLMA10dGpvSHQCeEqQhHE9RX/vgUE/MhzGiohG9MxnwuSWGb58RL4iNmu7AoLAFiOXvGnlRe4+LptL1SBOHHoLobYWjdzHImwihEWKG4F9H9Qvv8xNhaT6gTZXZEsst7a4dO3ye+ri+4+nSHGt8FbMy92YLGhagckD3Po2a69aO49qpKbmL1cNa6gv5q5HMIf96GN2x6nQMN2YBE/LScbMVEJ55kvCB25UChL9QbQ1DDSXMbBOQp1fQYbXY11gyEnPAJm6rHLYwiNfwejL6vnl7EZUS/S0GlRD71cP49uHaqqoHEkXshHspeoh/jZyp0k3hYrCeEfkInJ9Nbhb8z+hOGN+V0SiGh0jD6p4ZXPWbnXPP6AVnl+xY2osVauqJSPbK27Ziiz8PsGxrzkhbaUN3ft4W0vaSQSJcw="
      # travis encrypt GITHUB_TOKEN=...
      - secure: "M7O1q9aCUIkuBQIMGGlHwKvLBGb8KJ8rhPvQx0h3CcTStpU4rnQ+ngYfMamHHG8pWLGNWm0OEfVn+lbdil/cD8aoa2DrwTj5LQTiBmMWKp19ydRbywDU6yUCBn3fma/AlR4ONprU3QiV5pFLQyYtNQEvJRfjWCfG/jRFWqo8wctmCUKfUNsXccxnrJCg8TIIm/jP/QVvc+hALHCfuiBpfMILdJ8fb2YTp6K78zpoUxT+hDH9gRmflCtTsXrlqZ92gy1EmvvviFN2WUSDmjHfr8Tgt/UHMO/ggo/WmPkvmYeDyy/h0Yqm/WRpC9ebh6UK4wmxWM5zok+K8zhOtLiECeYJ7NexgMHVCdRvyqMXdFsNXtshJa3zH3+xB2Fx7uVAJMBiIrObWNCnbUZtvknI5+gMVnTm6/3b/ER5qHA6eYXGl4KXKUjnIA4ydZd9RbcpOQoy7oWOb03iAsrI9W+MOKlGIellBkiQnTAPr8cdN+4jFyC7/tA98ZzHK0/YcVLgCFyOCtf+L2JfTmhkbDq2Dpnnd2+ANWiX6NnAmzxQobQMXrWcJauR1Xxd30jyxW4v/XOlAMY1BBtwxcspm9jJaBkpkgXCQV/hgNZ6JNRhrIU//3v1MaSaz+uxMkVngfDAc3uheyUFjfza3Mo/4nRdJbzCvi+lVVwI07In4zeuVaQ="

# install the RPM package
addons:
  apt:
    packages:
      - rpm
      # To deploy the rpms, we need to ssh into places, and we dont want to store keys for now
      - sshpass

before_install:
  # add the bindata generator
  - cp .netrc ~
  - chmod 600 ~/.netrc
  - chmod 600 .netrc
  - go get -u github.com/jteeuwen/go-bindata/...


# Put a proper version string into the version file
before_script:
  - echo "==== Setting ${RPM_VERSION} as version ===="
  - echo -n ${RPM_VERSION} > lib/assets/VERSION

  # re-generate the assets after the version change
  - go generate -x github.com/palette-software/insight-server/lib
  # re-compile the server so the version is updated
  - go install

script:
  # Make the repository related environment variables. TRAVIS_REPO_SLUG is in the <owner_name/repo_name> format
  - IFS='/' read -ra REPOINFO <<< "$TRAVIS_REPO_SLUG"
  - export OWNER=${REPOINFO[0]}
  - export PACKAGE=${REPOINFO[1]}

  - pushd rpm-build

  #   # Freeze the dependencies of requirements
  - export SPEC_FILE=palette-insight-server.spec
  # - ./freeze-requirement.sh palette-insight-agent noarch ${SPEC_FILE}
  # # Show the contents of the modified (frozen versions) spec file
  # - cat ${SPEC_FILE}

  # Create directories
  - mkdir -p etc/palette-insight-server
  - mkdir -p usr/local/bin

  # Copy the binary
  - cp -v $GOPATH/bin/insight-server usr/local/bin/palette-insight-server
  - cp -v ../sample.config etc/palette-insight-server/server.config
  - echo "BUILDING VERSION:$RPM_VERSION"

  # build the rpm
  - rpmbuild -bb --buildroot $(pwd) --define "version $RPM_VERSION" --define "buildrelease $TRAVIS_BUILD_NUMBER" --define "_rpmdir $(pwd)/_build" ${SPEC_FILE}
  - popd

  # Create the zip file for github upload. The following environment variables
  # are required for release-to-github.sh
  - export PCKG_DIR=`pwd`
  - export PCKG_FILE=$PACKAGE-$PRODUCT_VERSION.zip
  - zip $PCKG_FILE -j $GOPATH/bin/insight-server


deploy:
  provider: script
  script: "./deploy.sh"
  skip_cleanup: true
  on:
    branch: master
    tags: false

notifications:
  email:
    on_success: never
    on_failure: never
