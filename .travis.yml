sudo: required

language: go
go:
- 1.6.3

env:
  global:
      - DEPLOY_HOST=rpm.palette-software.com
      - DEPLOY_PATH=/var/palette-rpm-repo
      - DEPLOY_USER=palette-rpm
      - RPM_VERSION=2.0.$TRAVIS_BUILD_NUMBER
      - PRODUCT_VERSION=v$RPM_VERSION

      # travis encrypt DEPLOY_PASSWORD=...
      - secure: "U1DfLPWcFbdw40VtQnraoDYS954QYPrBdmv1CFcbn8PG2ay1FsrrpZQ/VzfbTwTS2gc/63F+/rvBqSEyLBKXJR6jzDk1X2n64aHvQ4J1eWg5LGuhvjmDmMSWpZ/COUbeahGRcSgCtscd8x6lWQndS4lhdXn4p3pJBAIgPSH52Csj4mDr6VNGi6vJifloxDv+UjfqibiEjKFvZ543cW8XlNL93shUaSKd79FlUm0NAOVJVTdcIt+psEYkzRzarTIidIsZZGF5KACOdLUEzdu4yG4QHmRGYZKOOyB4kZAax3omtLVTWoK0W1rshjWwtci8mlptgfNTKTyst+Xexg2ePr7BmV9/SrKmqZhf5jYFGdEZdkTKys+pw+fzVHBQss4mqeiq+2XetdrPHfq+BPJwG+ofNs1685RCvvGqjhXNyYOql+HvG92UNNFwKml3kRHjLVsIDKpNn/C2ltljWmK36XxGFVrgRUVWV1ZHv74vESso3qaH1Nprdwqy9gg0fKYXBkArW5JWdx2TmpQS3BJQ9NJP+Zihl4txptMC4Tj4BdO9IGlObQnjdAn5gcnXEwbs7+FEvsdOCA+kuSrFpzZFS+Ucc/p1MlPFq6lknA0Au2s30wvJGT1vNtnW660RM4TTV69fUDMUbS2ZXon9tRHbMIey8DGYkMyo0bEFL4k0jOg="
      # travis encrypt GITHUB_TOKEN=...
      - secure: "QAVW/0nzx8P4HUi/FvYyFqwXJgrehzGLz+2zCO9vVhR5jIqZW7MlTezKw0IUmol+ZlbQeIc+BtU9+F9hj+ybpzBZx9DL+0rIHtoAIn7AMCF8serYJ/m/k1O1KyENm1z6WhL0dBtQzUToEB78WrAUO4dg1kl7k49npiJaOCpTOtEOu6+188WmghdXCBJ2wfHaoXz6FLIzxQg0UkW9H69yPhGPQmopPOeunZeohD1SiwFBuZBsL82SBii0ra1RXVu3j8kigfwa2SvOV2FeYTGoU6OpWIbseE/yVbSA3kMkWyZFL5a46gbC77WnjAtDJzx6bHftgCp7sxmMC5LDUnetOtjfOs2ehjlyuso3zMBQ9kDf/I6xWn2RQ/QhkuQFnBZXMLOjdwSnH2tjZfXdMmnXqhTOu6uKQWoHNoxzcJaMbduVdXqY5FwYWgMlj4CUgcC5iX8IfWgquSpDG125OMkUMnDzKb/USYfzZVspGE/q8OCknM13BJBSrLJ2Pyf8jyIgPyRoLfhW3EsDu3vYvBKJhhjQvEVJKwaQySjJCJc90ERv9oclzOEgIQv4cqQZmhEHquAJI34VeJXqAOE0dIrF8k76bA5mga4r1xnlOgSEHlfPIzIN12uPxuZfvVr6xWzD3ks8/3YPqS6HglI9DrKMhPIinwlWOvSpBQSVI5leFNs="

# install the RPM package
addons:
  apt:
    packages:
      - rpm
      # To deploy the rpms, we need to ssh into places, and we dont want to store keys for now
      - sshpass

before_install:
  # add the bindata generator
  - go get -u github.com/jteeuwen/go-bindata/...


# Put a proper version string into the version file
before_script:
  - echo "==== Setting ${RPM_VERSION} as version ===="
  - echo ${RPM_VERSION} > lib/assets/VERSION

  # re-generate the assets after the version change
  - go generate -x github.com/palette-software/insight-server/lib
  # re-compile the server so the version is updated
  - go install

script:
  # Make the repository related environment variables. TRAVIS_REPO_SLUG is in the <owner_name/repo_name> format
  - IFS='/' read -ra REPOINFO <<< "$TRAVIS_REPO_SLUG"
  - export OWNER=${REPOINFO[0]}
  - export PACKAGE=${REPOINFO[1]}

  - pushd rpm-build

  #   # Freeze the dependencies of requirements
  - export SPEC_FILE=palette-insight-server.spec
  # - ./freeze-requirement.sh palette-insight-agent noarch ${SPEC_FILE}
  # # Show the contents of the modified (frozen versions) spec file
  # - cat ${SPEC_FILE}

  # Create directories
  - mkdir -p etc/palette-insight-server
  - mkdir -p usr/local/bin

  # Copy the binary
  - cp -v $GOPATH/bin/insight-server usr/local/bin/palette-insight-server
  - cp -v ../sample.config etc/palette-insight-server/server.config
  - echo "BUILDING VERSION:$RPM_VERSION"

  # build the rpm
  - rpmbuild -bb --buildroot $(pwd) --define "version $RPM_VERSION" --define "buildrelease $TRAVIS_BUILD_NUMBER" --define "_rpmdir $(pwd)/_build" ${SPEC_FILE}
  - popd

  # Create the zip file for github upload. The following environment variables
  # are required for release-to-github.sh
  - export PCKG_DIR=`pwd`
  - export PCKG_FILE=$PACKAGE-$PRODUCT_VERSION.zip
  - zip $PCKG_FILE -j $GOPATH/bin/insight-server


deploy:
  provider: script
  script: "./deploy.sh"
  skip_cleanup: true
  on:
    branch: master
    tags: false

notifications:
  email:
    on_success: never
    on_failure: never
